setwd("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression")
knitr::opts_chunk$set(echo = TRUE)
library(sf) #load the package
uk <- st_read("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression/uk.shp")
sites<-st_read("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression/sites.shp")
oxford<-st_read("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression/oxford.shp")
newforest<-st_read("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression/newforest.shp")
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
summary(sites)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites[sites$oxpots >= 0 & sites$oxpots <= 5,]), pch=16, cex=0.3)
points(st_coordinates(sites[sites$oxpots >= 5 & sites$oxpots <= 10,]), pch=16, cex=0.6)
points(st_coordinates(sites[sites$oxpots >= 10 & sites$oxpots <= 15,]), pch=16, cex=0.9)
points(st_coordinates(sites[sites$oxpots >= 15 & sites$oxpots <= 20,]), pch=16, cex=1.5)
points(st_coordinates(sites[sites$oxpots >= 20 & sites$oxpots <= 25,]), pch=16, cex=2)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites[sites$nfpots >= 0 & sites$nfpots <= 5,]), pch=16, cex=0.3)
points(st_coordinates(sites[sites$nfpots >= 5 & sites$nfpots <= 10,]), pch=16, cex=0.6)
points(st_coordinates(sites[sites$nfpots >= 10 & sites$nfpots <= 15,]), pch=16, cex=0.9)
points(st_coordinates(sites[sites$nfpots >= 15 & sites$nfpots <= 20,]), pch=16, cex=1.5)
points(st_coordinates(sites[sites$nfpots >= 20 & sites$nfpots <= 25,]), pch=16, cex=2)
points(st_coordinates(newforest), col="green", pch=15)
coord<- rbind(st_coordinates(sites),st_coordinates(newforest),st_coordinates(oxford))
dist_matr<- as.matrix(dist(coord))
sites$distox <- dist_matr[32,1:30]
sites$distnf <- dist_matr[31,1:30]
sites$distox <- sites$distox / 1000
sites$distnf <- sites$distnf / 1000
summary(sites$distox)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites[sites$distox >= 0 & sites$distox <= 25,]), pch=16, cex=0.3)
points(st_coordinates(sites[sites$distox >= 25 & sites$distox <= 50,]), pch=16, cex=0.6)
points(st_coordinates(sites[sites$distox >= 50 & sites$distox <= 100,]), pch=16, cex=0.9)
points(st_coordinates(sites[sites$distox >= 150 & sites$distox <= 200,]), pch=16, cex=1.5)
points(st_coordinates(sites[sites$distox >200,]), pch=16, cex=2)
points(st_coordinates(oxford), col="red", pch=15)
summary(sites$distnf)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites[sites$distnf >= 0 & sites$distnf <= 25,]), pch=16, cex=0.3)
points(st_coordinates(sites[sites$distnf >= 25 & sites$distnf <= 50,]), pch=16, cex=0.6)
points(st_coordinates(sites[sites$distnf >= 50 & sites$distnf <= 100,]), pch=16, cex=0.9)
points(st_coordinates(sites[sites$distnf >= 150 & sites$distnf <= 200,]), pch=16, cex=1.5)
points(st_coordinates(sites[sites$distnf >200,]), pch=16, cex=2)
points(st_coordinates(newforest), col="green", pch=15)
plot(sites$distox,sites$oxpots)
lregr <- lm(sites$oxpots ~ sites$distox)
View(lregr)
plot(sites$distox,sites$oxpots, pch=16)
plot(sites$distox,sites$oxpots, main="Linear regression", xlab = "distance from Oxford (km)",  ylab="Oxford Pottery (percentage)", pch=16)
abline(lregr, col="red")
summary(lregr)
summary(lregr)$sigma
residuals(lregr)
sites$sr <- residuals(lregr) / 5.693
View(sites)
plot(sites$distox,sites$sr)
plot(sites$distox,sites$sr, pch=16)
View(sites)
plot(sites$transport,sites$sr, ylab="St. Residuals", xlab="River link")
plot(sites$transport=TRUE,sites$sr, ylab="St. Residuals", xlab="River link")
plot(sites[sites$transport=TRUE],sites$sr, ylab="St. Residuals", xlab="River link")
plot(sites[sites$transport=="TRUE"],sites$sr, ylab="St. Residuals", xlab="River link")
plot(sites[sites$transport=="TRUE",],sites$sr, ylab="St. Residuals", xlab="River link")
sites[sites$transport=="TRUE",]
plot(sites&distox,sites[sites$transport == TRUE, "sr"], ylab="St. Residuals", xlab="River link")
plot(sites$distox,sites[sites$transport == TRUE, "sr"], ylab="St. Residuals", xlab="River link")
sites[sites$transport == TRUE, "sr"]
plot(sites$distox[sitest$transport==TRUE],sites[sites$transport == TRUE, "sr"], ylab="St. Residuals", xlab="River link")
plot(sites$distox[sites$transport==TRUE],sites[sites$transport == TRUE, "sr"], ylab="St. Residuals", xlab="River link")
sites$distox[sites$transport==TRUE]
sites[sites$transport == TRUE, "sr"]
sites$distox
sites$distox
sites$sr
sites$distox[sites$transport==TRUE]
sites[sites$transport == TRUE
]
sites[sites$transport == TRUE, "sr"]
View(sites)
sites$distox[sites$transport==TRUE]
transport_true_sites <- sites[sites$transport == TRUE, ]
View(transport_true_sites)
length(transport_true_sites$distox)
plot(transport_true_sites$distox, transport_true_sites$sr,
ylab = "Standardized Residuals",
xlab = "Distance to Oxford (distox)")
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link")
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link")
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link")
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link")
plot(sites$distox[sites$transport==FALSE],sites$sr[sites$transport == FALSE], ylab="St. Residuals", xlab="No River link")
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link", ylim = c(-2,2))
plot(sites$distox[sites$transport==TRUE],sites$sr[sites$transport == TRUE], ylab="St. Residuals", xlab="River link", ylim = c(-2,2), pch=16)
plot(sites$distox[sites$transport==FALSE],sites$sr[sites$transport == FALSE], ylab="St. Residuals", xlab="No River link", ylim = c(-2,2), pch=16)
t.regdata <- sites@data[sites$transport==TRUE,]
t.regdata <- sites[sites$transport==TRUE,]
nt.regdata <- sites[sites$transport==FALSE,]
lregr.t <- lm(oxpots~distox, data=t.regdata)
lregr.nt <- lm(oxpots~distox, data=nt.regdata)
summary(lregr.t)
summary(lregr.nt)
total <- residuals(res)
total <- residuals(lregr)
transport <- residuals(lregr.t)
no_transport <- residuals(lregr.nt)
boxplot(total,transport,no_transport, names=c("total","river","no river"))
plot(sites$distox,sites$oxpots)
plot(sites$distox,sites$oxpots, pch=16)
points(t.regdata$distox,t.regdata$oxpots,col="blue",pch=16)
points(nt.regdata$distox,nt.regdata$oxpots,col="red",pch=16)
abline(lregr,lty="dashed",col="black")
abline(lregr.t,col="blue")
abline(lregr.nt,col="red")
plot(sites$distox,sites$oxpots, pch=16)
points(t.regdata$distox,t.regdata$oxpots,col="blue",pch=16)
points(nt.regdata$distox,nt.regdata$oxpots,col="red",pch=16)
abline(lregr,lty="dashed",col="black")
abline(lregr.t,col="blue")
abline(lregr.nt,col="red")
plot(sites$distox,sites$oxpots, pch=16)
points(t.regdata$distox,t.regdata$oxpots,col="blue",pch=16)
points(nt.regdata$distox,nt.regdata$oxpots,col="brown",pch=16)
abline(lregr,lty="dashed",col="black")
abline(lregr.t,col="blue")
abline(lregr.nt,col="brown")
plot(sites$distox,sites$oxpots, pch=16)
points(t.regdata$distox,t.regdata$oxpots,col="blue",pch=16)
points(nt.regdata$distox,nt.regdata$oxpots,col="brown",pch=16)
abline(lregr,lty="dashed",col="black")
abline(lregr.t,col="blue")
abline(lregr.nt,col="brown")
plot(sites$nfpots,sites$nfpots, pch=16)
plot(sites$distnf,sites$nfpots, pch=16)
lregr <- lm(sites$nfpots ~ sites$distnf)
abline(lregr, col="red")
summary(lregr)
lregr.t <- lm(nfpots~distnf, data=t.regdata)
lregr.nt <- lm(nfpots~distnf, data=nt.regdata)
summary(lregr.t)
View(t.regdata)
summary(lregr.nt)
total <- residuals(lregr)
transport <- residuals(lregr.t)
no_transport <- residuals(lregr.nt)
boxplot(total,transport,no_transport, names=c("total","river","no river"))
rivers<-st_read("/Users/alessio/Desktop/T4C Course/corso/class 3/data/linear_regression/rivers.shp")
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
lines(st_geometry(rivers), col="blue")
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=2)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=1)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=.1)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=.01)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=.009)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=.01)
plot(st_geometry(uk), col="grey75", border=NA)
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=0.1)
plot(st_geometry(uk), col="grey75", border=NA,  xlim=c(300000, 650000), ylim=c(50000, 500000))
points(st_coordinates(sites), pch=19, cex=0.3)
points(st_coordinates(newforest), col="green", pch=15)
points(st_coordinates(oxford), col="red", pch=15)
plot(st_geometry(rivers), col="blue", add=TRUE, lwd=0.1)
3.4*4
setwd("/Users/alessio/Desktop/T4C Course/corso/class 3/data/chi-square test")
observed <- matrix(c(70, 40, 90, 30, 50, 0), nrow = 3, byrow = TRUE)
# Set row and column names for clarity
rownames(observed) <- c("Alluvial", "Loamy", "Rocky")
colnames(observed) <- c("Rural", "Urban")
View(observed)
write.csv(observed, file="settlements_soil.csv")
data<-read.csv(file="settlements_soil.csv", header = TRUE, sep=",")
setwd("/Users/alessio/Desktop/T4C Course/corso/class 3/data/chi-square test")
data<-read.csv(file="settlements_soil.csv", header = TRUE, sep=",")
data<-read.csv(file="settlements_soil.csv", header = TRUE, sep=",")
data<-read.csv(file="settlements_soil.csv", header = TRUE, sep=",")
data<-read.csv(file="/Users/alessio/Desktop/T4C Course/corso/class 3/data/chi-square testsettlements_soil.csv", header = TRUE, sep=",")
data<-read.csv(file="/Users/alessio/Desktop/T4C Course/corso/class 3/data/chi-square test/settlements_soil.csv", header = TRUE, sep=",")
data
data
total_settlements <- sum(data)
View(data)
str(data)
print(data[1,1]
)
print(data[1,2]
)
print(data[,2]
)
print(data[,2:3])
sum(data[,2:3])
total_settlements <- sum(data[,2:3])
row_totals <- rowSums(data[,2:3])
row_totals
col_totals <- colSums(data[,2:3])
col_totals
expected <- outer(row_totals, col_totals) / total_settlements
expected
data
(110*210)/280
(110*70)/280
chi_square_test <- chisq.test(data)
chi_square_test <- chisq.test(data[,2:3])
chi_square_test
# Perform Chi-Square Test
chi_square_test <- chisq.test(data[,2:3])
# Print the Chi-Square Test results
chi_square_test
# Total number of settlements
total_settlements <- sum(data[,2:3])
# Row totals (for each soil type)
row_totals <- rowSums(data[,2:3])
# Column totals (Rural and Urban settlements)
col_totals <- colSums(data[,2:3])
# Compute expected frequencies
expected <- outer(row_totals, col_totals) / total_settlements
# Print the expected frequencies
expected
# Perform Chi-Square Test
chi_square_test <- chisq.test(data[,2:3])
# Print the Chi-Square Test results
chi_square_test
chi_square_test$statistic
chi_square_test$parameter
chi_square_test$method
chi_square_test$data.name
chi_square_test$residuals
chi_square_test$observed
chi_square_test$expected
