labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5)  # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5)  # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5) + # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5) + # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5) + # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
ggplot(spearheads, aes(x = mat, y = maxle, fill = mat)) +
geom_violin() + # Violin plot
geom_boxplot(width = 0.1, color = "black", alpha = 0.5) + # Adds boxplot inside
labs(title = "Violin Plot of maxle by Material", x = "Material", y = "maxle")
knitr::opts_chunk$set(echo = TRUE)
spearheads <- read.csv(file = "spearheads.csv", header = TRUE, sep = ",")
plot(ecdf(spearheads$maxle), verticals=TRUE, do.points=FALSE)
plot(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
lines(ecdf(spearheads$maxle[spearheads$mat==c("Iron")]),verticals=TRUE, do.points=FALSE,col.hor="red",col.ver="red")
data <- c(3, 7, 2, 9, 5, 6, 4, 8)
ecdf_plot <- ecdf(data)
plot(ecdf_plot, main="Empirical Cumulative Distribution Function", xlab="Data Values", ylab="Cumulative Probability")
plot(ecdf(data), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Iron")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Iron")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
lines(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]),verticals=TRUE, do.points=FALSE,col.hor="red",col.ver="red")
plot(ecdf(spearheads$maxle[spearheads$mat==c("Iron")]), verticals=TRUE, do.points=FALSE,main="ECDF Bronze vs Iron: Length of spearheads")
lines(ecdf(spearheads$maxle[spearheads$mat==c("Bronze")]),verticals=TRUE, do.points=FALSE,col.hor="red",col.ver="red")
hist(spearheads$maxle)
hist(spearheads$maxle, brks=10)
hist(spearheads$maxle, breaks=10)
hist(spearheads$maxle[spearheads$mat==c("Iron")])
hist(spearheads$maxle[spearheads$mat==c("Iron")],breaks = 20)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 20)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 10)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 7)
ks.test(spearheads$maxle[spearheads$mat=="Iron"],spearheads$maxle[spearheads$mat=="Bronze"])
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 10)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 10)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 9)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 5)
hist(spearheads$maxle[spearheads$mat==c("Bronze")],breaks = 6)
hist(spearheads$maxle[spearheads$mat==c("Iron")],breaks = 6)
ks.test(spearheads$maxle[spearheads$mat=="Iron"],spearheads$maxle[spearheads$mat=="Bronze"])
library(archdata)
install.packages("archdata")
library(archdata)
spearheads
barplot?
?barplot
barplot(table(spearheads$mat),
main = "Material Distribution of Spearheads",
col = c("darkorange", "steelblue"),
xlab = "Material",
ylab = "Count",
border = "black")
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
plot(spearheads$maxle, spearheads$weight,
)
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
legend.text = rownames(context_table),
xlab = "Context",
ylab = "Count")
View(spearheads)
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
# Define colors for better visualization
colors <- c("skyblue", "orange", "lightgreen", "red")
# Create the pie chart
pie(context_counts,
labels = paste(names(context_counts), "\n", context_counts),
col = colors,
main = "Distribution of Spearhead Contexts")
# Add a legend
legend("topright", legend = names(context_counts), fill = colors)
boxplot(weight ~ mat, data = spearheads,
main = "Weight Distribution by Material",
col = c("gold", "grey"),
xlab = "Material",
ylab = "Weight (grams)")
barplot(table(spearheads$mat),
main = "Material Distribution of Spearheads",
col = c("darkorange", "steelblue"),
xlab = "Material",
ylab = "Count",
border = "black")
context_counts <- table(spearheads$con)
# Create the bar chart
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = "steelblue",
xlab = "Context of Discovery",
ylab = "Count",
border = "black",
las = 2)  # Rotat
context_counts <- table(spearheads$con)
context_counts
?table
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "Context of Discovery",
ylab = "Count",
border = "black",
las = 2)  #
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "Context of Discovery",
ylab = "Count",
border = "black",
las = 2)  #
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "",
ylab = "Count",
border = "black",
las = 2)  #
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "a",
ylab = "Count",
border = "black",
las = 2)  #
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "a",
ylab = "Count",
border = "black",
las = 4)  #
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
xlab = "a",
ylab = "Count",
border = "black")
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
barplot(context_counts,
main = "Distribution of Spearhead Contexts",
col = c("steelblue", "yellow","green"),
ylab = "Count",
border = "black")
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
# Define colors for better visualization
colors <- c("skyblue", "orange", "lightgreen", "red")
# Create the pie chart
pie(context_counts,
labels = paste(names(context_counts), "\n", context_counts),
col = colors,
main = "Distribution of Spearhead Contexts")
# Add a legend
legend("topleft", legend = names(context_counts), fill = colors)
# Create a frequency table for contexts
context_counts <- table(spearheads$con)
# Define colors for better visualization
colors <- c("skyblue", "orange", "lightgreen")
# Create the pie chart
pie(context_counts,
labels = paste(names(context_counts), context_counts),
#labels = paste(names(context_counts), "\n", context_counts),
col = colors,
main = "Distribution of Spearhead Contexts")
# Add a legend
legend("topleft", legend = names(context_counts), fill = colors)
context_table <- table(spearheads$mat, spearheads$con)
context_table
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
legend.text = rownames(context_table),
xlab = "Context",
ylab = "Count")
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = names(context_counts), fill = colors)
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = names(context_counts), fill = c("gold", "steelblue"))
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = names(context_table), fill = c("gold", "steelblue"))
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = c("Iron","Bronze"), fill = c("gold", "steelblue"))
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = c("Bronze","Iron"), fill = c("gold", "steelblue"))
context_table <- table(spearheads$mat, spearheads$con)
barplot(context_table,
main = "Spearhead Contexts",
col = c("gold", "steelblue"),
xlab = "Context",
ylab = "Count")
# Add a legend
legend("topleft", legend = c("Iron","Bronze"), fill = c("steelblue", "gold"))
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
#col = as.factor(spearheads$mat),
pch = 16)
# Add a legend
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
#add the legend
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = 1:length(levels(as.factor(spearheads$mat))), pch = 16)
?levels
spearheads$con <- as.factor(spearheads$con)
test <- as.factor(spearheads$con)
test
levels(test)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
#add the legend
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = c("black","red"), pch = 16)
plot(spearheads$maxle, spearheads$weight,
main = "Max Length vs. Weight of Spearheads",
xlab = "Maximum Length (cm)",
ylab = "Weight (grams)",
col = as.factor(spearheads$mat),
pch = 16)
#add the legend
legend("topleft", legend = levels(as.factor(spearheads$mat)),
col = c("black","red"), pch = 16)
knitr::opts_chunk$set(echo = TRUE)
spearheads <- read.csv(file = "spearheads.csv", header = TRUE, sep = ",")
summary(spearheads)
summary(spearheads$weight)
hist(weight, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
?attach
weighted.mean()
attach(spearheads)
hist(weight, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
weight
100*0:25
dev.print(device=pdf, file="hist_weight_all.pdf")
dev.print(device=pdf, file="hist_weight_all.pdf")
hist(weight, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(weight, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
dev.print(device=pdf, file="hist_weight_all.pdf")
mean(weight)
sd(weight)
sample.n9<-sample(weight,size=9, replace = T)
sample.n9bis<-sample(weight,size=9, replace = T)
sample.n9
sample.n9bis
View(spearheads)
weight
sample.n9bis<-sample(weight,size=9, replace = F)
sample.n9bis
sample.n9bis2
sample.n9bis2<-sample(weight,size=9, replace = F)
sample.n9bis2
?sample
mean(sample.n9)
?sapply
samplemeans.n9 <- sapply(1:50, function(i) mean(sample(weight,size=9, replace = T)))
samplemeans.n9
hist(samplemeans.n9, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
samplemeans.n4 <- sapply(1:50, function(i) mean(sample(weight,size=4, replace = T)))
samplemeans.n16 <- sapply(1:50, function(i) mean(sample(weight,size=16, replace = T)))
samplemeans.n25 <- sapply(1:50, function(i) mean(sample(weight,size=25, replace = T)))
?(par)
?par
?mfrow
par(mfrow=c(2,2))
hist(samplemeans.n4, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n9, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n16, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n25, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
dev.print(device=pdf,file="hist_weight_sample.pdf")
par(mfrow=c(2,2))
hist(samplemeans.n4, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n9, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n16, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
hist(samplemeans.n25, breaks = c(100*0:25), xlim=c(0,2500), ylim= c(0,30))
`
dev.print(device=pdf,file="hist_weight_sample.pdf")
set.seed(1)
sample.n9s1<-sample(weight,size=9, replace = T)
n9s1mean<-mean(sample.n9s1)
sample.n9s1
set.seed(1)
sample.n9s1<-sample(weight,size=9, replace = T)
n9s1mean<-mean(sample.n9s1)
n9s1mean
set.seed(2)
sample.n9s12<-sample(weight,size=9, replace = T)
sample.n9s1
sample.n9s12
sample.n9s12<-sample(weight,size=9, replace = T)
sample.n9s12
set.seed(1)
sample.n9s1
sample.n9s1<-sample(weight,size=9, replace = T)
sample.n9s1
set.seed(2)
sample.n9s1
sample.n9s1<-sample(weight,size=9, replace = T)
sample.n9s1
set.seed(1)
sample.n9s1<-sample(weight,size=9, replace = T)
n9s1mean<-mean(sample.n9s1)
sample.n9s1
sd(sample.n9s1)/sqrt(9)
se.n9s1<-sd(sample.n9s1)/sqrt(9) * sqrt((40-9)/(40-1))
set.seed(1)
sample.n9s1<-sample(weight,size=9, replace = T)
n9s1mean<-mean(sample.n9s1)
sd(sample.n9s1)/sqrt(9)
se.n9s1<-sd(sample.n9s1)/sqrt(9) * sqrt((40-9)/(40-1))
se.n9s1
?qt
t.9
t.n9
# First calculate the relevant t-score. For those who want to follow
# the detail of this calculation, the t-value is for both tails of the
# distribution hence 0.975 rather than 0.95 (see Shennan 1997: 83).
t.n9<-qt(0.975, df=9-1)
# Then calculate the confidence interval
n9conf.int<-t.n9 * se.n9s1
n9conf.int
t.n9
433.76 + 282.55
433.76 - 282.55
set.seed(2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
se.n25s2<-sd(sample.n25s2)/sqrt(25) * sqrt((40-25)/(40-1))
t.n25<-qt(0.975, df=25-1)
n25conf.int<-t.n25 * se.n25s2
n25conf.int
set.seed(2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
se.n25s2<-sd(sample.n25s2)/sqrt(25) * sqrt((40-25)/(40-1))
se.n25s2
t.n25<-qt(0.975, df=25-1)
n25conf.int<-t.n25 * se.n25s2
n25conf.int
set.seed(2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
se.n25s2<-sd(sample.n25s2)/sqrt(25) * sqrt((40-25)/(40-1))
t.n25<-qt(0.975, df=25-1)
n25conf.int<-t.n25 * se.n25s2
n25conf.int
mean(sample.n25s2)
weight
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
set.seed(2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
se.n25s2<-sd(sample.n25s2)/sqrt(25) * sqrt((40-25)/(40-1))
t.n25<-qt(0.975, df=25-1)
n25conf.int<-t.n25 * se.n25s2
n25conf.int
set.seed(2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
set.seed(1)
sample.n25s2<-sample(weight,size=25, replace = T)
mean(sample.n25s2)
se.n25s2<-sd(sample.n25s2)/sqrt(25) * sqrt((40-25)/(40-1))
t.n25<-qt(0.975, df=25-1)
n25conf.int<-t.n25 * se.n25s2
n25conf.int
389.552+95.52
389.552-95.52
# The z-score for 95% confidence is 1.96 and we first calculate a
# temporary estimate of necessary sample size:
tmpsize<-((1.96*sd(weight))/150)^2
# The final estimate of the necessary sample size.
ssize.150gtol<-1/((1/tmpsize) + (1/40))
ssize.150gtol
# The z-score for 95% confidence is 1.96 and we first calculate a
# temporary estimate of necessary sample size:
tmpsize<-((1.96*sd(weight))/150)^2
# The final estimate of the necessary sample size.
ssize.150gtol<-1/((1/tmpsize) + (1/40))
ssize.150gtol
tmpsize<-((1.96*sd(weight))/100)^2
# The final estimate of the necessary sample size.
ssize.150gtol<-1/((1/tmpsize) + (1/40))
ssize.150gtol
tinytex::install_tinytex()
system("xelatex --version")
install.packages("tinytex")
install.packages("tinytex")
tinytex::tlmgr_install("collection-xetex")
system("xelatex --version")
